# Managed by SaltStack: {{ SLS }}


server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ CERT_NAME }};
    access_log {{ pillar.nginx.custom_log_dir }}/access_archive.log
        json_archive buffer=32k flush=2s;
    access_log {{ pillar.nginx.custom_log_dir }}/access_debug.log
        json_debug buffer=32k flush=2s;
    ssl_certificate /etc/letsencrypt/live/{{ CERT_NAME }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ CERT_NAME }}/privkey.pem;
{%- if pillar.pod.startswith("stage") %}
    auth_basic "Staging Environment Restricted";
    auth_basic_user_file /etc/nginx/htpasswd;
{%- endif %}
    # NGINX Docs | NGINX Reverse Proxy
    # https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
{%- for dispatch in pillar.nginx.dispatches %}
{%- if "host" in dispatch %}
{%- set host = dispatch.host %}
{%- else %}
{%- set host = "$host" %}
{%- endif %}
    # {{ dispatch.description }}
    location {{ dispatch.location }} {
        proxy_buffering off;
        proxy_pass {{ dispatch.server }}$request_uri;
        proxy_set_header Host      {{ host }};
        proxy_set_header X-Real-IP $remote_addr;
{%- if dispatch.location in ["/choose", "/publicdomain"] %}

        # <iframe> embedded not working Â· Issue #1101
        # https://github.com/creativecommons/creativecommons.org/issues/1101
        more_clear_headers 'X-Frame-Options';
{%- endif %}
    }
{%- endfor %}
}


# vim: ft=nginx:
